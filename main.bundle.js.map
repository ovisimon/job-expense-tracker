{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/company-view/company-view.component.css","./src/app/company-view/company-view.component.html","./src/app/company-view/company-view.component.ts","./src/app/company.service.ts","./src/app/expense.service.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/job-view/job-view.component.css","./src/app/job-view/job-view.component.html","./src/app/job-view/job-view.component.ts","./src/app/job.service.ts","./src/app/navigation/navigation.component.css","./src/app/navigation/navigation.component.html","./src/app/navigation/navigation.component.ts","./src/app/stage.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { appRoutes } from './app.routes';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { CompanyService } from './company.service';\nimport { JobService } from './job.service';\nimport { StageService } from './stage.service';\nimport { ExpenseService } from './expense.service';\n\nimport { CompanyViewComponent } from './company-view/company-view.component';\nimport { JobViewComponent } from './job-view/job-view.component';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CompanyViewComponent,\n    JobViewComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { useHash: true, enableTracing: false}\n      ),\n  ],\n  providers: [\n    AppComponent,\n    CompanyService,\n    JobService,\n    StageService,\n    ExpenseService ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CompanyViewComponent } from './company-view/company-view.component';\r\nimport { JobViewComponent } from './job-view/job-view.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'company', component: CompanyViewComponent },\r\n  { path: 'company/:id', component: CompanyViewComponent },\r\n  { path: 'job', component: JobViewComponent },\r\n  { path: 'job/:id', component: JobViewComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","module.exports = \".add-job {\\r\\n\\tdisplay: none;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company-view/company-view.component.css\n// module id = ./src/app/company-view/company-view.component.css\n// module chunks = main","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container mt-5\\\">\\n\\t<h2 class=\\\"mb-5\\\">Company Home</h2>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<h5>Company Name: {{company.name}}</h5>\\n\\t\\t\\t<h5>Address: {{company.address}}</h5>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-md\\\">\\n\\t\\t\\t<h6 class=\\\"text-center\\\">(click on row to go to job home)</h6>\\n\\t\\t\\t<table class=\\\"table table-striped\\\">\\n\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Job Title</th>\\n\\t\\t\\t\\t\\t\\t<th>Client Name</th>\\n\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let job of company.jobs\\\" routerLink=\\\"/job/{{job._id}}\\\">\\n\\t\\t\\t\\t\\t\\t<td>{{job.projectTitle}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{job.clientName}}</td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"btn btn-success\\\" (click)=\\\"soon($event)\\\">Edit</button></td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteJob(job._id, company._id, $event)\\\">Delete</button></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td colspan=\\\"2\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"showForm()\\\">Add new job</button></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<form [class.add-job]=\\\"addForm\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.projectTitle\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"title\\\" placeholder=\\\"Project Title\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.clientName\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"clientName\\\" placeholder=\\\"Client Name\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.projectContact\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"projectContact\\\" placeholder=\\\"Project Contact\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.phone\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.email\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"email\\\" placeholder=\\\"Email\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.location\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"location\\\" placeholder=\\\"Location\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.room\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"room\\\" placeholder=\\\"Room\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.driveName\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"driveName\\\" placeholder=\\\"Drive name\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.dueDate\\\" type=\\\"date\\\" class=\\\"form-control mt-2\\\" name=\\\"dueDate\\\" placeholder=\\\"Due date\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.shootDate\\\" type=\\\"date\\\" class=\\\"form-control mt-2\\\" name=\\\"shootDate\\\" placeholder=\\\"Shoot date\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.billingContact\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"billingContact\\\" placeholder=\\\"Billing contact\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.cameras\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"cameras\\\" placeholder=\\\"Cameras\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"job.itemsNeeded\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"itemsNeeded\\\" placeholder=\\\"Items needed\\\">\\n\\t\\t\\t\\t\\t<textarea [(ngModel)]=\\\"job.notes\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"notes\\\" placeholder=\\\"Notes\\\"></textarea>\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-2\\\" (click)=\\\"saveJob($event)\\\">Submit</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company-view/company-view.component.html\n// module id = ./src/app/company-view/company-view.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Company } from '../../model/company';\nimport { CompanyService } from '../company.service';\nimport { Job } from '../../model/job';\nimport { JobService } from '../job.service';\n\n@Component({\n  selector: 'app-company-view',\n  templateUrl: './company-view.component.html',\n  styleUrls: ['./company-view.component.css']\n})\nexport class CompanyViewComponent implements OnInit {\n  company: Company = {};\n  job: Job = {};\n  addForm: boolean = true;\n\n  constructor(\n    private companyService: CompanyService,\n    private jobService: JobService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getCompany();\n  }\n\n  getCompany(): void {\n    this.route.params.switchMap(params => this.companyService.getCompany(params.id))\n    .subscribe(res => this.company = res.company);\n  }\n\n  saveJob(): void {\n    this.job.company = this.company._id;\n    this.jobService.addJob(this.job).subscribe(x => this.companyService.addJobToCompany(x.id, x.company)\n      .subscribe(x => {\n        console.log('comp id', this.company._id);\n        this.getCompany();\n        this.job = {};\n      })\n    );\n  }\n\n  deleteJob(compId: string, job: string, $event: any): void {\n    $event.stopPropagation();\n    this.companyService.deleteJobFromCompany(compId, job).subscribe(x => {\n      this.jobService.deleteJob(job).subscribe(x => {\n        console.log('Job deleted from Company');\n        this.getCompany();\n      });\n    });\n  }\n\n  showForm(): void {\n    this.addForm = !this.addForm;\n  }\n\n  soon($event) {\n    alert('functionality will be added soon');\n    $event.stopPropagation();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company-view/company-view.component.ts","import 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Company } from '../model/company';\nimport { Job } from '../model/job';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/shareReplay';\n\n@Injectable()\nexport class CompanyService {\n\n  constructor(\n    private http: HttpClient) {\n  }\n\n  getCompanies(): Observable<any> {\n    return this.http.get<Observable<any>>(`https://job-expense-tracker.herokuapp.com/api/companies`).shareReplay();\n  }\n\n  getCompany(id: string): Observable<any> {\n    return this.http.get<any>(`https://job-expense-tracker.herokuapp.com/api/companies/${id}`).shareReplay();\n  }\n\n  addCompany(company: Company): Observable<Company> {\n    return this.http.post<Company>(`https://job-expense-tracker.herokuapp.com/api/companies`, company);\n  }\n\n  updateCompany(company: Company): Observable<Company> {\n    return this.http.patch<Company>(`https://job-expense-tracker.herokuapp.com/api/companies`, company);\n  }\n\n  addJobToCompany(job: string, compId: string): Observable<any> {\n    let j: Job = {};\n    j._id = job;\n    return this.http.put<any>(`https://job-expense-tracker.herokuapp.com/api/companies/${compId}`, j);\n  }\n\n  deleteJobFromCompany(jobId: string, compId: string): Observable<any> {\n    return this.http.delete<any>(`https://job-expense-tracker.herokuapp.com/api/companies/${compId}/${jobId}`);\n  }\n\n  deleteCompany(id: string): Observable<Company> {\n    return this.http.delete<Company>(`https://job-expense-tracker.herokuapp.com/api/companies/${id}`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company.service.ts","import 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Expense } from '../model/expense';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/shareReplay';\n\n@Injectable()\nexport class ExpenseService {\n\n  constructor(\n    private http: HttpClient) {\n  }\n\n  getJobs(): Observable<any> {\n    return this.http.get<Observable<any>>(`https://job-expense-tracker.herokuapp.com/api/expenses`).shareReplay();\n  }\n\n  getExpense(id: string): Observable<any> {\n    return this.http.get<any>(`https://job-expense-tracker.herokuapp.com/api/expenses/${id}`).shareReplay();\n  }\n\n  addExpense(expense: Expense): Observable<any> {\n    return this.http.post<any>(`https://job-expense-tracker.herokuapp.com/api/expenses`, expense);\n  }\n\n  addExpenseToStage(expense: Expense, staId: string): Observable<any> {\n    return this.http.put<any>(`https://job-expense-tracker.herokuapp.com/api/expenses/${staId}`, expense);\n  }\n\n  addActualTime(expId: string, staId: string, time: any): Observable<any> {\n    return this.http.post<any>(`https://job-expense-tracker.herokuapp.com/api/expenses/${expId}/${staId}`, { time: time });\n  }\n\n  deleteActualTime(timeId: string, expId: string, staId: string): Observable<any> {\n    return this.http.delete<any>(`https://job-expense-tracker.herokuapp.com/api/expenses/${timeId}/${expId}/${staId}`);\n  }\n\n  updateExpense(expense: Expense): Observable<Expense> {\n    return this.http.patch<Expense>(`https://job-expense-tracker.herokuapp.com/api/expenses`, expense);\n  }\n\n  deleteExpense(expId: string, staId: string): Observable<Expense> {\n    return this.http.delete<Expense>(`https://job-expense-tracker.herokuapp.com/api/expenses/${expId}/${staId}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/expense.service.ts","module.exports = \".col-centered {\\r\\n\\tfloat: none;\\r\\n\\tmargin: auto;\\r\\n\\tmax-width: 500px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm col-centered\\\">\\n\\t\\t\\t<h3 class=\\\"text-center mb-5\\\">Companies</h3>\\n\\t\\t\\t<h6 class=\\\"text-center\\\">(click on row to go to company home)</h6>\\n\\t\\t\\t<table class=\\\"table\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<th>Company Name</th>\\n\\t\\t\\t\\t\\t\\t<th>Company Address</th>\\n\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let company of companies\\\" routerLink=\\\"/company/{{company._id}}\\\">\\n\\t\\t\\t\\t\\t\\t<td>{{company.name}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{company.address}}</td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"btn btn-success\\\" (click)=\\\"soon($event)\\\">Edit</button></td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteCompany(company._id, $event); $event.stopPropagation()\\\">Delete</button></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm col-centered\\\">\\n\\t\\t\\t<h3 class=\\\"text-center mb-5 mt-5\\\">Create new company</h3>\\n\\t\\t\\t<form>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"companyName\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"companyname\\\" placeholder=\\\"Company name\\\">\\n\\t\\t\\t\\t\\t<input [(ngModel)]='companyAddress' type=\\\"text\\\" class=\\\"form-control mt-3\\\" name=\\\"companyaddress\\\" placeholder=\\\"Company address\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary mt-3\\\" (click)=\\\"saveCompany($event)\\\">Create Company</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Company } from '../../model/company';\nimport { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CompanyService } from '../company.service';\n\nimport 'rxjs/add/operator/shareReplay';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n@Injectable()\nexport class HomeComponent implements OnInit {\n  companyName: string;\n  companyAddress: string;\n  companies: Observable<Company[]>;\n\n  constructor(\n    private service: CompanyService,\n    private http: HttpClient,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getCompanies();\n  }\n\n  getCompanies() {\n    this.service.getCompanies().subscribe(comp => this.companies = comp.companies);\n    console.log(this.companies);\n  }\n\n  saveCompany(): void {\n    let compa: Company = {};\n    compa.name = this.companyName;\n    compa.address = this.companyAddress;\n    this.service.addCompany(compa).subscribe(x => {\n      this.router.navigate(['/home']);\n      this.getCompanies();\n      this.companyName = null;\n      this.companyAddress = null;\n    });\n  }\n\n  deleteCompany(id: string, $event) {\n    this.service.deleteCompany(id).subscribe(x => {\n      $event.stopPropagation();\n      this.getCompanies();\n    });\n  }\n\n  soon($event: any) {\n    alert('Functionality will be added soon');\n    $event.stopPropagation();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".add-stage {\\r\\n\\tdisplay: none;\\r\\n}\\r\\n\\r\\n.hiddenRow {\\r\\n    padding: 0 !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job-view/job-view.component.css\n// module id = ./src/app/job-view/job-view.component.css\n// module chunks = main","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<h2 *ngIf=\\\"job.projectTitle\\\">Project title: {{job.projectTitle}}</h2>\\n\\t\\t\\t<h4 *ngIf=\\\"job.clientName\\\">Client name: {{job.clientName}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.projectContact\\\">Project Contact: {{job.projectContact}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.phone\\\">Phone: {{job.phone}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.email\\\">Email: {{job.email}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.room\\\">Room: {{job.room}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.drive\\\">Drive: {{job.drive}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.dueDate\\\">Due date: {{job.dueDate | date: \\\"MMM dd yyyy\\\"}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.shootDate\\\">Shoot date: {{job.shootDate | date: \\\"MMM dd yyyy\\\"}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.billingContact\\\">Billing Contact: {{job.billingContact}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.cameras\\\">Cameras: {{job.cameras}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.itemsNeeded\\\">Items Needed: {{job.itemsNeeded}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"job.notes\\\">Notes: {{job.notes}}</h4>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row mt-5 mb-5\\\">\\n\\t\\t<div class=\\\"col-md\\\">\\n\\t\\t\\t<table class=\\\"table table-striped table-hover table-info text-center\\\">\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>Quote</th>\\n\\t\\t\\t\\t\\t<th>Budget</th>\\n\\t\\t\\t\\t\\t<th>Actual</th>\\n\\t\\t\\t\\t\\t<th>Add-ons</th>\\n\\t\\t\\t\\t\\t<th>Grand Total</th>\\n\\t\\t\\t\\t\\t<th>Invoiced</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t<td>{{budget}}</td>\\n\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t<td [ngClass]=\\\"{'text-success': total < budget, 'text-danger': total > budget, 'text-primary': total == budget}\\\">{{total}}</td>\\n\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<div *ngFor=\\\"let stage of job.stages\\\">\\n\\t\\t\\t\\t<h2 class=\\\"text-center\\\">{{stage.name}}</h2>\\n\\t\\t\\t\\t<h6 class=\\\"text-center\\\">(click on row to expand and add time)</h6>\\n\\t\\t\\t\\t<table class=\\\"table table-striped table-hover text-center\\\" style=\\\"border-collapse: collapse;\\\">\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<th>Expense name</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Est. hrs</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Hourly rate</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Est. days</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Day rate</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Est. man hrs</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Est. total</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Total hrs</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Total</th>\\n\\t\\t\\t\\t\\t\\t\\t<th colspan=\\\"2\\\"><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteStage(stage._id)\\\">Delete Stage</button></th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody *ngFor=\\\"let expense of stage.expenses\\\">\\n\\t\\t\\t\\t\\t\\t<tr data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"eliminateSpace('#' + expense._id)\\\" class=\\\"accordion-toggle clickable\\\">\\n\\t\\t\\t\\t\\t\\t\\t<td>{{expense.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{expense.estimatedHours}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{expense.hourlyRate}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{expense.estimatedDays}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{expense.dailyRate}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{calculateEstimatedManHours(expense.estimatedHours, expense.estimatedDays)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{calculateEstimatedTotal(expense.estimatedHours, expense.hourlyRate, expense.estimatedDays, expense.dailyRate)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td [ngClass]=\\\"{'text-success': calculateTotalHours(expense.actualTime) < calculateEstimatedManHours(expense.estimatedHours, expense.estimatedDays), 'text-danger': calculateTotalHours(expense.actualTime) > calculateEstimatedManHours(expense.estimatedHours, expense.estimatedDays), 'text-primary': calculateTotalHours(expense.actualTime) == calculateEstimatedManHours(expense.estimatedHours, expense.estimatedDays)}\\\">{{calculateTotalHours(expense.actualTime)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td [ngClass]=\\\"{'text-success': calculateTotal(expense) < calculateEstimatedTotal(expense.estimatedHours, expense.hourlyRate, expense.estimatedDays, expense.dailyRate), 'text-danger': calculateTotal(expense) > calculateEstimatedTotal(expense.estimatedHours, expense.hourlyRate, expense.estimatedDays, expense.dailyRate), 'text-primary': calculateTotal(expense) == calculateEstimatedTotal(expense.estimatedHours, expense.hourlyRate, expense.estimatedDays, expense.dailyRate) }\\\">{{calculateTotal(expense)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td><button class=\\\"btn btn-success\\\" (click)=\\\"editExpense(expense._id); soon($event)\\\">Edit</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteExpense(expense._id, stage._id)\\\">Delete</button></td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n            \\t<td colspan=\\\"7\\\" class=\\\"hiddenRow\\\">\\n            \\t\\t<div class=\\\"accordion-body collapse in\\\" [attr.id]=\\\"eliminateSpace(expense._id)\\\">\\n            \\t\\t\\t<div *ngIf=\\\"expense.actualTime.length > 0\\\" class=\\\"row\\\">\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center font-weight-bold\\\">Hours</div>\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center font-weight-bold\\\">Days</div>\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center font-weight-bold\\\">Date</div>\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center font-weight-bold\\\"></div>\\n            \\t\\t\\t</div>\\n            \\t\\t\\t<div *ngFor=\\\"let time of expense.actualTime\\\" class=\\\"row\\\">\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center\\\">{{time.hours}}</div>\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center\\\">{{time.days}}</div>\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center\\\">{{time.date | date: 'MMM/dd/yyyy'}}</div>\\n            \\t\\t\\t\\t<div class=\\\"col-md text-center\\\"><button class=\\\"btn btn-danger mb-1\\\" (click)=\\\"soon($event)\\\">Delete</button></div>\\n            \\t\\t\\t</div>\\n            \\t\\t\\t<div class=\\\"row mt-2 mb-2\\\">\\n            \\t\\t\\t\\t<div class=\\\"col-md\\\"><input [(ngModel)]=\\\"actualTime.hours\\\" type=\\\"number\\\" name=\\\"actualHours\\\" class=\\\"form-control\\\" placeholder=\\\"Hours\\\"></div>\\n            \\t\\t\\t\\t<div class=\\\"col-md\\\"><input [(ngModel)]=\\\"actualTime.days\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1\\\" name=\\\"actualDays\\\" class=\\\"form-control\\\" placeholder=\\\"Days\\\"></div>\\n            \\t\\t\\t\\t<div class=\\\"col-md\\\"><input [(ngModel)]=\\\"actualTime.date\\\" type=\\\"date\\\" name=\\\"actualDate\\\" class=\\\"form-control\\\" placeholder=\\\"Date\\\"></div>\\n            \\t\\t\\t\\t<div class=\\\"col-md\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"saveActualTime(expense._id, stage._id)\\\">Add time</button></div>\\n            \\t\\t\\t</div>\\n            \\t\\t</div>\\n            \\t</td>\\n        \\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t<tr class=\\\"table-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t<th>Sub Total</th>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{calculateSTEH(stage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{calculateSTMH(stage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{calculateSTET(stage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td [ngClass]=\\\"{'text-success': calculateSTTH(stage) < calculateSTMH(stage), 'text-danger': calculateSTTH(stage) > calculateSTMH(stage), 'text-primary': calculateSTTH(stage) == calculateSTMH(stage)}\\\">{{calculateSTTH(stage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td [ngClass]=\\\"{'text-success': calculateSTET(stage) > calculateSTT(stage), 'text-danger': calculateSTET(stage) < calculateSTT(stage), 'text-primary': calculateSTET(stage) == calculateSTT(stage) }\\\">{{calculateSTT(stage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td><input [(ngModel)]=\\\"newExpense.name\\\" type=\\\"text\\\" name=\\\"expenseName\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><input [(ngModel)]=\\\"newExpense.estimatedHours\\\" type=\\\"text\\\" name=\\\"estimatedHours\\\" class=\\\"form-control\\\" placeholder=\\\"Hours\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><input [(ngModel)]=\\\"newExpense.hourlyRate\\\" type=\\\"text\\\" name=\\\"hourlyRate\\\" class=\\\"form-control\\\" placeholder=\\\"Rate /h\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><input [(ngModel)]=\\\"newExpense.estimatedDays\\\" type=\\\"text\\\" name=\\\"estimatedDays\\\" class=\\\"form-control\\\" placeholder=\\\"Days\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><input [(ngModel)]=\\\"newExpense.dailyRate\\\" type=\\\"text\\\" name=\\\"dailyRate\\\" class=\\\"form-control\\\" placeholder=\\\"Rate /d\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"2\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"saveExpense(stage._id)\\\">Add expense</button></td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"btn btn-primary mb-5\\\" (click)=\\\"showForm()\\\">Add new stage</button>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t\\t\\t<form [class.add-stage]=\\\"addForm\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"stage.name\\\" type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"name\\\" placeholder=\\\"Stage Name\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-2\\\" (click)=\\\"saveStage()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job-view/job-view.component.html\n// module id = ./src/app/job-view/job-view.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Job } from '../../model/job';\nimport { JobService } from '../job.service';\nimport { Stage } from '../../model/stage';\nimport { StageService } from '../stage.service';\nimport { Expense } from '../../model/expense';\nimport { ExpenseService } from '../expense.service';\nimport { Time } from '../../model/time';\n\n@Component({\n  selector: 'app-job-view',\n  templateUrl: './job-view.component.html',\n  styleUrls: ['./job-view.component.css']\n})\nexport class JobViewComponent implements OnInit {\n  job: Job = {};\n  stage: Stage = {};\n  addForm: boolean = true;\n  newExpense: Expense = {};\n  actualTime: Time = {};\n  budget: number;\n  total: number;\n\n  constructor(\n    private jobService: JobService,\n    private stageService: StageService,\n    private expenseService: ExpenseService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.showJob();\n  }\n\n  showJob(): void {\n    this.route.params.switchMap(params => this.jobService.getJob(params.id))\n    .subscribe(res => {\n      this.job = res.job;\n      this.budget = this.calculateBudget(this.job);\n      this.total = this.calculateGrandTotal(this.job);\n    });\n  }\n\n  saveStage(): void {\n    this.stage.job = this.job._id;\n    this.stageService.addStage(this.stage).subscribe(x => this.jobService.addStageToJob(x.id, x.job)\n      .subscribe(res => this.showJob()));\n    this.stage = {};\n  }\n\n  deleteStage(id: string) {\n    this.stageService.deleteStage(id).subscribe(x => this.showJob());\n  }\n\n  showForm(): void {\n    this.addForm = !this.addForm;\n  }\n\n  saveExpense(id: string): void {\n    this.expenseService.addExpenseToStage(this.newExpense, id).subscribe(x => this.showJob());\n    this.newExpense = {};\n  }\n\n  editExpense(id: string): void {\n    console.log('edit', id);\n  }\n\n  deleteExpense(expense: string, stage: string): void {\n    this.expenseService.deleteExpense(expense, stage).subscribe(x => this.showJob());\n  }\n\n  saveActualTime(expense: string, stage: string) {\n    this.expenseService.addActualTime(expense, stage, this.actualTime).subscribe(x => this.showJob());\n    this.actualTime = {};\n  }\n\n  deleteActualTime(time: string, expense: string, stage: string) {\n    this.expenseService.deleteActualTime(time, expense, stage).subscribe(x => this.showJob());\n  }\n\n  calculateEstimatedManHours(estimatedHours: number, estimatedDays: number): number {\n    if (!estimatedHours && !estimatedDays)\n      return 0;\n    if (estimatedHours && !estimatedDays)\n      return estimatedHours;\n    if (!estimatedHours && estimatedDays)\n      return estimatedDays * 10;\n    if (estimatedHours && estimatedDays)\n      return estimatedHours + estimatedDays * 10;\n  }\n\n  calculateEstimatedTotal(estimatedHours, hourlyRate, estimatedDays, dailyRate) {\n    if (!estimatedHours && !estimatedDays)\n      return 0;\n    if (estimatedHours && !estimatedDays)\n      return estimatedHours * hourlyRate;\n    if (!estimatedHours && estimatedDays)\n      return estimatedDays * dailyRate;\n    if (estimatedHours && estimatedDays)\n      return estimatedHours * hourlyRate + estimatedDays * dailyRate;\n  }\n\n  calculateTotalHours(actualTime: any[]) {\n    let actualHours: number = 0;\n    let actualDays: number = 0;\n\n    actualTime.forEach((element) => {\n      if (element.hours)\n        actualHours = actualHours + element.hours;\n      if (element.days)\n        actualDays = actualDays + element.days;\n    });\n\n    if (actualTime.length < 1)\n      return 0;\n    if (!actualHours && !actualDays)\n      return 0;\n    if (actualHours && !actualDays)\n      return actualHours;\n    if (!actualHours && actualDays)\n      return actualDays * 10;\n    if (actualHours && actualDays)\n      return actualHours + actualDays * 10;\n  }\n\n  calculateTotal(expense) {\n    let actualHours: number = 0;\n    let actualDays: number = 0;\n    let dailyRate = expense.dailyRate;\n    let hourlyRate = expense.hourlyRate;\n\n    expense.actualTime.forEach((element) => {\n      if (element.hours)\n        actualHours = actualHours + element.hours;\n      if (element.days)\n        actualDays = actualDays + element.days;\n    });\n\n    if (expense.actualTime.length < 1)\n      return 0;\n    if (!actualHours && !actualDays)\n      return 0;\n    if (actualHours && !actualDays)\n      return actualHours * hourlyRate;\n    if (!actualHours && actualDays)\n      return dailyRate * actualDays;\n    if (actualHours && actualDays)\n      return hourlyRate * actualHours + dailyRate * actualDays;\n  }\n\n  eliminateSpace(string: string): string {\n    return string.replace(/\\s/g, '');\n  }\n\n  soon($event) {\n    alert('Functionality will be added soon');\n    $event.stopPropagation();\n  }\n\n  calculateSTEH(stage: any): number {\n    let result = 0;\n    stage.expenses.forEach((element) => {\n      if (element.estimatedHours) {\n        result = result + element.estimatedHours;\n      }\n    });\n    return result;\n  }\n\n  calculateSTMH(stage: any): number {\n    let result = 0;\n    stage.expenses.forEach((element) => {\n      if (element.estimatedHours || element.estimatedDays) {\n        result = result + this.calculateEstimatedManHours(element.estimatedHours, element.estimatedDays);\n      }\n    });\n    return result;\n  }\n\n  calculateSTET(stage: any) {\n    let result = 0;\n    stage.expenses.forEach((element) => {\n      if (element.estimatedHours || element.estimatedDays) {\n        result = result + this.calculateEstimatedTotal(element.estimatedHours, element.hourlyRate, element.estimatedDays, element.dailyRate);\n      }\n    });\n    return result;\n  }\n\n  calculateSTTH(stage: any) {\n    let result = 0;\n    stage.expenses.forEach((element) => {\n      if (element.actualTime) {\n        result = result + this.calculateTotalHours(element.actualTime);\n      }\n    });\n    return result;\n  }\n\n  calculateSTT(stage: any) {\n    let result = 0;\n    stage.expenses.forEach((element) => {\n      if (element) {\n        result = result + this.calculateTotal(element);\n      }\n    });\n    return result;\n  }\n\n  calculateBudget(job: any): number {\n    let result = 0;\n    job.stages.forEach((element) => {\n      if (element) {\n        result = result + this.calculateSTET(element);\n      }\n    });\n    return result;\n  }\n\n  calculateGrandTotal(job: any): number {\n    let result = 0;\n    job.stages.forEach((element) => {\n      if (element) {\n        result = result + this.calculateSTT(element);\n      }\n    });\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job-view/job-view.component.ts","import 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Job } from '../model/job';\nimport { Stage } from '../model/stage';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/shareReplay';\n\n@Injectable()\nexport class JobService {\n\n  constructor(\n    private http: HttpClient) {\n  }\n\n  getJobs(): Observable<any> {\n    return this.http.get<Observable<any>>(`https://job-expense-tracker.herokuapp.com/api/jobs`).shareReplay();\n  }\n\n  getJob(id: string): Observable<any> {\n    return this.http.get<any>(`https://job-expense-tracker.herokuapp.com/api/jobs/${id}`).shareReplay();\n  }\n\n  addJob(job: Job): Observable<any> {\n    return this.http.post<any>(`https://job-expense-tracker.herokuapp.com/api/jobs`, job);\n  }\n\n  updateJob(job: Job): Observable<Job> {\n    return this.http.patch<Job>(`https://job-expense-tracker.herokuapp.com/api/jobs`, job);\n  }\n\n  addStageToJob(stage: string, joId: string): Observable<any> {\n    let s: Stage = {};\n    s._id = stage;\n    return this.http.put<any>(`https://job-expense-tracker.herokuapp.com/api/jobs/${joId}`, s);\n  }\n\n  deleteJob(id: string): Observable<Job> {\n    return this.http.delete<Job>(`https://job-expense-tracker.herokuapp.com/api/jobs/${id}`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navigation/navigation.component.css\n// module id = ./src/app/navigation/navigation.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md mb-5\\\" routerLink=\\\"/\\\">\\n\\t\\t\\t<h1>Home</h1>\\n\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navigation/navigation.component.html\n// module id = ./src/app/navigation/navigation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navigation/navigation.component.ts","import 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Stage } from '../model/stage';\nimport { Job } from '../model/job';\nimport { Expense } from '../model/expense';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/shareReplay';\n\n@Injectable()\nexport class StageService {\n\n  constructor(\n    private http: HttpClient) {\n  }\n\n  getStages(): Observable<any> {\n    return this.http.get<Observable<any>>(`https://job-expense-tracker.herokuapp.com/api/stages`).shareReplay();\n  }\n\n  getStage(id: string): Observable<any> {\n    return this.http.get<any>(`https://job-expense-tracker.herokuapp.com/api/stages/${id}`).shareReplay();\n  }\n\n  addStage(stage: Stage): Observable<any> {\n    return this.http.post<Stage>(`https://job-expense-tracker.herokuapp.com/api/stages`, stage);\n  }\n\n  addExpenseToStage(expense: string, staId: string): Observable<any> {\n    let e: Expense = {};\n    e._id = expense;\n    return this.http.put<any>(`https://job-expense-tracker.herokuapp.com/api/jobs/${staId}`, e);\n  }\n\n  updateStage(stage: Stage): Observable<Stage> {\n    return this.http.patch<Stage>(`https://job-expense-tracker.herokuapp.com/api/stages`, stage);\n  }\n\n  deleteStage(id: string): Observable<Stage> {\n    return this.http.delete<Stage>(`https://job-expense-tracker.herokuapp.com/api/stages/${id}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/stage.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  Api_Url: 'http://localhost:3000',\n  DB_URL: 'mongodb://localhost:27017/nodeDB'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}